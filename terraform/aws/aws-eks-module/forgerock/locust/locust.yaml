apiVersion: v1
kind: Namespace
metadata:
  name: locust
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: locust 
  name: locust 
  namespace: locust
spec:
  ipFamilies:
  - IPv6
  ipFamilyPolicy: SingleStack
  ports:
  - name: locust 
    port: 80
    protocol: TCP
    targetPort: 8089
  selector:
    app: locust 
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: locust 
  name: locust 
  namespace: locust
spec:
  replicas: 1
  selector:
    matchLabels:
      app: locust 
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: locust 
    spec:
      containers:
      - image: devforge1/locust:v2
        imagePullPolicy: Always
        name: locust 
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
        ports:
        - containerPort: 8089
          protocol: TCP
        - containerPort: 5557
          protocol: TCP
        resources:
          requests:
            cpu: 200m
            memory: 400Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      hostNetwork: true
--- 
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/ip-address-type: dualstack
    alb.ingress.kubernetes.io/load-balancer-name: locust-alb
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]' #'[{"HTTP": 8080}, {"HTTP": 80}, {"HTTPS": 443}, {"HTTPS": 8443}]' 
    alb.ingress.kubernetes.io/tags: Purpose=LoadTest
    alb.ingress.kubernetes.io/group.name: locust-group
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '8'
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-port: '8089'
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/success-codes: '200'
  name: locust
  namespace: locust
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: locust
                port:
                  number: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: locust-hpa
  namespace: locust
spec:
  maxReplicas: 1
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: locust
  targetCPUUtilizationPercentage: 70
---
- name: Set up kubeadm
  command: "kubeadm init --ignore-preflight-errors=Mem --ignore-preflight-errors=NumCPU"
  #shell: kubeadm init --pod-network-cidr=10.100.0.0/16 --service-cidr=10.200.0.0/16 --service-dns-domain="kubernetes.lab" --ignore-preflight-errors=Mem --ignore-preflight-errors=NumCPU

- name: Create directories kube
  file: 
    path: /root/.kube 
    state: directory 
    owner: root 
    group: root

- name: Configure kube
  copy: 
    src: /etc/kubernetes/admin.conf 
    dest: /root/.kube/config 
    remote_src: yes 
    owner: root 
    group: root

- name: Set up Pod Network - Flannel
  command: "kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"

- name: Generate join token
  command: kubeadm token create --print-join-command
  register: kubeadm_join_cmd
  when:
    - inventory_hostname in groups['kubernetes']

- set_fact:
    kubeadm_join: "{{ kubeadm_join_cmd.stdout }}"

- debug: 
    var: kubeadm_join

# - name: Store join command
#   action: copy content="{{ kubeadm_join }}" dest="/etc/kubernetes/kubeadm-join.command"

- name: Run kubeadm join
  command: "{{ kubeadm_join }}"
  when:
    - inventory_hostname in groups['kubernetes-workers']
  

# - name: restart server
#   shell: 'sleep 1 && shutdown -r now "Reboot triggered by Ansible" && sleep 1'
#   async: 1
#   poll: 0
#   become: true

# - name: Wait for server to restart {{ inventory_hostname }}
#   local_action:
#     module: wait_for
#       host={{ inventory_hostname }}
#       port={{ ansible_ssh_port }}
#       delay=10
#     become: false

# - name: Stop kubelet service
#   service:
#     name: kubelet
#     state: stopped

# - name: Start kubelet service
#   service:
#     name: kubelet
#     state: started
    
# - name: Remove NoSchedule from master node
#   shell: "kubectl taint node $(kubectl get nodes --no-headers | awk '{print $1}') node-role.kubernetes.io/control-plane:NoSchedule-"